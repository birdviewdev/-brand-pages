{"version":3,"file":"static/chunks/pages/best-fit-product/BestFitProduct-67be39e3d834fd96.js","mappings":"oFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,mCACA,WACA,OAAeC,EAAQ,KACvB,EACA,sHCQA,IAAMC,EAA0BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAGA,iDAK7BC,EAAiB,IAAmB,CACxC,GAAM,CAAEC,KAAMC,CAAAA,CAAW,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACtB,CAAEC,sBAAAA,CAAAA,CAAuBC,QAAAA,CAAAA,CAAS,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAqB,CAC9DJ,UAAAA,CACF,GAEA,MACE,GAAAK,EAAAC,EAAA,EAACC,EAAAA,EAAoBA,CAAAA,UACnB,GAAAF,EAAAG,EAAA,EAACC,EAAAA,EAAKA,CAAAA,CACJC,UAAU,MACVC,eAAe,gBACfd,IAAKD,YAEL,GAAAS,EAAAC,EAAA,EAACM,EAAAA,EAAwBA,CAAAA,CAAAA,GAExBT,EAAQU,GAAG,CAAC,CAAAC,EAAwBC,IAAU,IAAjC,CAAEC,SAAAA,CAAAA,CAAUC,QAAAA,CAAAA,CAAS,CAAAH,EAC3BI,EAAM,GAAYF,MAAAA,CAATD,EAAM,KAAYI,MAAA,CAATH,GACxB,MACE,GAAAX,EAAAC,EAAA,EAACc,EAAAA,EAAmBA,CAAAA,CAElBC,SAAUnB,EACVc,SAAUA,EACVC,QAASA,GAHJC,EAMX,GAEA,GAAAb,EAAAC,EAAA,EAACgB,EAAAA,EAAyBA,CAAAA,CAAAA,GAC1B,GAAAjB,EAAAC,EAAA,EAACiB,EAAAA,CAAyBA,CAAAA,CAAAA,OAIlC,CAEAC,CAAAA,EAAA,QAAe1B","sources":["webpack://_N_E/?11f9","webpack://_N_E/./src/pages/best-fit-product/BestFitProduct.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/best-fit-product/BestFitProduct\",\n      function () {\n        return require(\"private-next-pages/best-fit-product/BestFitProduct.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/best-fit-product/BestFitProduct\"])\n      });\n    }\n  ","import { css } from '@emotion/react';\n\nimport { PreventLargeWidthBox, Stack } from 'src/components/layout';\nimport {\n  BestFitProductIntroPaper,\n  BestFitProductLodingPaper,\n  BestFitProductPaper,\n} from 'src/components/papers';\nimport useProductInfo from 'src/hooks/useProductInfo';\nimport useSurveysForBestFit from 'src/hooks/useSurveysForBestFit';\n\nimport BestFitProductResultPaper from '../../components/papers/BestFitProductResultPaper';\n\n// scroll-snap-points-y: repeat(100vh);\nconst scrollSnapTypeMandatory = css`\n  overflow: scroll;\n  scroll-snap-type: x mandatory;\n`;\n\nconst BestFitProduct = (): JSX.Element => {\n  const { name: brandName } = useProductInfo();\n  const { surveyBackgroundImage, surveys } = useSurveysForBestFit({\n    brandName,\n  });\n\n  return (\n    <PreventLargeWidthBox>\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        css={scrollSnapTypeMandatory}\n      >\n        <BestFitProductIntroPaper />\n\n        {surveys.map(({ question, options }, index) => {\n          const key = `${index}-${question}`;\n          return (\n            <BestFitProductPaper\n              key={key}\n              imageUrl={surveyBackgroundImage}\n              question={question}\n              options={options}\n            />\n          );\n        })}\n\n        <BestFitProductLodingPaper />\n        <BestFitProductResultPaper />\n      </Stack>\n    </PreventLargeWidthBox>\n  );\n};\n\nexport default BestFitProduct;\n"],"names":["window","__NEXT_P","push","__webpack_require__","scrollSnapTypeMandatory","css","BestFitProduct","name","brandName","useProductInfo","surveyBackgroundImage","surveys","useSurveysForBestFit","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__","tZ","PreventLargeWidthBox","BX","Stack","direction","justifyContent","BestFitProductIntroPaper","map","param","index","question","options","key","concat","BestFitProductPaper","imageUrl","BestFitProductLodingPaper","BestFitProductResultPaper","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"static/chunks/pages/best-fit-product/survey/BestFitProductQuestion-722eded7e301edd7.js","mappings":"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","sources":["webpack://_N_E/?99f6","webpack://_N_E/./src/components/animated/constant.ts","webpack://_N_E/./src/components/animated/Animated.tsx","webpack://_N_E/./src/components/animated/AnimatedInView.tsx","webpack://_N_E/./src/components/animated/AnimatedTransition.tsx","webpack://_N_E/./src/components/animated/index.ts","webpack://_N_E/./src/components/dataDisplay/Typography.tsx","webpack://_N_E/./src/components/dataDisplay/index.ts","webpack://_N_E/./src/components/layout/FullHeightBox.tsx","webpack://_N_E/./src/components/layout/FullWidthBox.tsx","webpack://_N_E/./src/components/layout/Stack.tsx","webpack://_N_E/./src/components/layout/ThinRectangleBox.tsx","webpack://_N_E/./src/components/layout/index.ts","webpack://_N_E/./src/constants/resouce.ts","webpack://_N_E/./src/hooks/commons.ts","webpack://_N_E/./src/hooks/useProductInfo.ts","webpack://_N_E/./src/hooks/useSurveysForBestFit.ts","webpack://_N_E/./src/pages/best-fit-product/survey/BestFitProductQuestion.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/best-fit-product/survey/BestFitProductQuestion\",\n      function () {\n        return require(\"private-next-pages/best-fit-product/survey/BestFitProductQuestion.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/best-fit-product/survey/BestFitProductQuestion\"])\n      });\n    }\n  ","import type { UseSpringProps } from '@react-spring/web';\nimport { easings } from '@react-spring/web';\n\nexport const BOTTOM_TO_UP = {\n  from: {\n    opacity: 0,\n    y: 100,\n  },\n  to: {\n    opacity: 1,\n    y: 0,\n  },\n};\n\nexport const LEFT_TO_RIGHT = {\n  from: {\n    opacity: 0,\n    x: -100,\n  },\n  to: {\n    opacity: 1,\n    x: 0,\n  },\n};\n\nexport const EASE_IN_OUT_BACK_CONFIG = {\n  easing: easings.easeInOutBack,\n};\nexport const EASE_OUT_ELASTIC_CONFIG = {\n  easing: easings.easeOutElastic,\n};\n\nexport const DEFAULT_OPTIONS: UseSpringProps = {\n  ...BOTTOM_TO_UP,\n  config: EASE_IN_OUT_BACK_CONFIG,\n};\n\nexport const LEFT_TO_RIGHT_OPTIONS: UseSpringProps = {\n  ...LEFT_TO_RIGHT,\n  config: EASE_IN_OUT_BACK_CONFIG,\n};\n\nexport const LEFT_TO_RIGHT_ELASTIC_OPTIONS: UseSpringProps = {\n  ...LEFT_TO_RIGHT,\n  config: EASE_OUT_ELASTIC_CONFIG,\n};\n\nexport const REPEAT_OPTIONS: UseSpringProps = {\n  loop: true,\n  from: { x: -20, opacity: 0.5 },\n  to: [\n    { x: 0, opacity: 1 },\n    { x: 20, opacity: 0.5 },\n    { x: 0, opacity: 1 },\n    { x: -20, opacity: 0.5 },\n  ],\n  config: EASE_IN_OUT_BACK_CONFIG,\n};\n","import type { UseSpringProps } from '@react-spring/web';\nimport { animated, useSpring } from '@react-spring/web';\n\nimport { DEFAULT_OPTIONS } from './constant';\n\ninterface AnimatedInViewProps {\n  children: React.ReactNode;\n  options?: UseSpringProps;\n}\nconst Animated = ({\n  children,\n  options = DEFAULT_OPTIONS,\n  ...others\n}: AnimatedInViewProps): JSX.Element => {\n  const props = useSpring(options);\n\n  return (\n    <animated.div style={props} {...others}>\n      {children}\n    </animated.div>\n  );\n};\n\nexport default Animated;\n","import type { UseSpringProps } from '@react-spring/web';\nimport { animated, useInView } from '@react-spring/web';\n\nimport { DEFAULT_OPTIONS } from './constant';\n\ninterface AnimatedInViewProps {\n  children: React.ReactNode;\n  options?: UseSpringProps;\n}\nconst AnimatedInView = ({\n  children,\n  options = DEFAULT_OPTIONS,\n  ...others\n}: AnimatedInViewProps): JSX.Element => {\n  const [ref, springs] = useInView(() => options, {\n    once: false,\n  });\n\n  return (\n    <animated.div ref={ref} style={springs} {...others}>\n      {children}\n    </animated.div>\n  );\n};\n\nexport default AnimatedInView;\n","import { animated, useTransition } from '@react-spring/web';\n\ninterface AnimatedInViewProps {\n  children: React.ReactNode;\n}\nconst AnimatedTransition = ({\n  children,\n  ...others\n}: AnimatedInViewProps): JSX.Element => {\n  const transitions = useTransition(children, {\n    from: { opacity: 0, transform: 'translateX(-100%)' },\n    enter: {\n      opacity: 1,\n      transform: 'translateX(0)',\n    },\n    leave: { transform: 'translateX(100%)' },\n    reset: true,\n  });\n\n  return transitions((style) => (\n    <animated.div style={style} {...others}>\n      {children}\n    </animated.div>\n  ));\n};\n\nexport default AnimatedTransition;\n","export { default as Animated } from './Animated';\nexport { default as AnimatedInView } from './AnimatedInView';\nexport { default as AnimatedTransition } from './AnimatedTransition';\nexport * from './constant';\n","import { css } from '@emotion/react';\n\n// TODO: theme 으로 이동\nconst style = {\n  h1: css`\n    font-style: normal;\n    font-weight: 900;\n    font-size: 40px;\n    letter-spacing: -0.2px;\n    line-height: 40px;\n  `,\n  h2: css`\n    font-style: normal;\n    font-weight: 900;\n    font-size: 32px;\n    letter-spacing: -0.2px;\n    line-height: 36px;\n  `,\n  h3: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 24px;\n    letter-spacing: -0.2px;\n    line-height: 30px;\n  `,\n  h4: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 16px;\n    letter-spacing: -0.2px;\n    line-height: 24px;\n  `,\n\n  title: css`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    letter-spacing: -0.2px;\n    line-height: 24px;\n  `,\n  subtitle: css`\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    letter-spacing: -0.2px;\n    line-height: 24px;\n  `,\n  body: css`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    letter-spacing: -0.2px;\n    line-height: 20px;\n  `,\n  caption: css`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    letter-spacing: -0.2px;\n    line-height: 16px;\n  `,\n  badge: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: -0.2px;\n  `,\n};\n\nconst variants = [\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'title',\n  'subtitle',\n  'body',\n  'caption',\n  'badge',\n] as const;\nexport type Variant = (typeof variants)[number];\n\ninterface TypographyProps {\n  children: React.ReactNode;\n  variant?: Variant;\n}\n\nconst Typography = ({\n  children,\n  variant = 'body',\n  ...others\n}: TypographyProps): JSX.Element => {\n  return (\n    <span css={style[variant]} {...others}>\n      {children}\n    </span>\n  );\n};\n\nexport default Typography;\n","export { default as Typography } from './Typography';\nexport * from './Typography';\n","import { css } from '@emotion/react';\n// import { useCallback, useEffect, useState } from 'react';\n\n// TODO: 동적으로 처리하면 웹뷰에서 출력이 안된다. 다른 대안이 필요하다.\n// const wrapper = (height: number) => css`\n//  height: ${height ? `${height}px` : '100vh'};\n// `;\n// position: fixed;\n// height: 100%;\n// width: 100%;\nconst wrapper = css`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\ninterface FullHeightBoxProps {\n  children: React.ReactNode;\n}\nconst FullHeightBox = ({\n  children,\n  ...others\n}: FullHeightBoxProps): JSX.Element => {\n  return (\n    <div css={wrapper} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default FullHeightBox;\n","import { css } from '@emotion/react';\n\n// 사용성이 떨어진다. Stack 의 경우 직접 fullWidth 가 포함되었다.\nconst wrapper = css`\n  flex: 0 0 100%;\n`;\n\ninterface FullWidthBoxProps {\n  children: React.ReactNode;\n}\nconst FullWidthBox = ({\n  children,\n  ...others\n}: FullWidthBoxProps): JSX.Element => {\n  return (\n    <div css={wrapper} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default FullWidthBox;\n","import { css } from '@emotion/react';\n\nconst ROW = 'row';\nconst ROW_REVERSE = 'row-reverse';\nconst COLUMN = 'column';\nconst COLUMN_REVERSE = 'column-reverse';\n\nconst DIRECTIONS = [ROW, ROW_REVERSE, COLUMN, COLUMN_REVERSE] as const;\nexport type Direction = (typeof DIRECTIONS)[number];\n\nconst BASELINE = 'baseline';\nconst NORMAL = 'normal';\nconst STRETCH = 'stretch';\nconst CENTER = 'center';\nconst START = 'flex-start';\nconst END = 'flex-end';\n\nconst ALIGN_ITEMS = [NORMAL, BASELINE, STRETCH, CENTER, START, END] as const;\nexport type AlignItems = (typeof ALIGN_ITEMS)[number];\n\nconst SPACE_BETWEEN = 'space-between';\nconst JUSTIFY_CONTENT = [NORMAL, SPACE_BETWEEN, START, END, CENTER] as const;\nexport type JustifyContent = (typeof JUSTIFY_CONTENT)[number];\n\nexport interface StackProps {\n  direction?: Direction;\n  spacing?: number;\n  alignItems?: AlignItems;\n  justifyContent?: JustifyContent;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n}\n\nconst wrapper = (\n  direction: StackProps['direction'] = COLUMN,\n  spacing = 0,\n  alignItems = NORMAL,\n  justifyContent = NORMAL,\n) => css`\n  display: flex;\n  flex-direction: ${direction};\n  gap: ${spacing}px;\n  align-items: ${alignItems};\n  justify-content: ${justifyContent};\n`;\n\nconst fullWidthStyle = css`\n  width: 100%;\n`;\n\n// flex-direction: column 을 기본으로 하며\n// flex-start, flext-end 등 사용하는 property 만 제공하는 정렬을 위한 Flex Box\nconst Stack = ({\n  children,\n  direction,\n  spacing,\n  alignItems,\n  justifyContent,\n  fullWidth,\n  ...others\n}: StackProps): JSX.Element => {\n  return (\n    <div\n      css={[\n        wrapper(direction, spacing, alignItems, justifyContent),\n        fullWidth && fullWidthStyle,\n      ]}\n      {...others}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Stack;\n","import { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\n\nconst sizedWrapper = (width: number) => css`\n  width: ${width}px;\n`;\n\ninterface VerticalScrollableBoxProps {\n  children: React.ReactNode;\n}\n\n// 최소한의 반응형 처리 - width 가 height 보다 클때 height 를 width 로 사용하도록 처리합니다.\n// 가장 상단에 사용하는 것을 추천합니다.. 예, pages/.+/index.tsx\nconst ThinRectangleBox = ({\n  children,\n  ...others\n}: VerticalScrollableBoxProps): JSX.Element => {\n  const [isWide, setIsWide] = useState(false);\n  const [width, setWidth] = useState<number | null>(null);\n\n  const onResize = () => {\n    const isWidthBigger =\n      window.innerWidth > 0 && window.innerWidth > window.innerHeight;\n    setIsWide(isWidthBigger);\n    setWidth(isWidthBigger ? window.innerHeight : null);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    onResize();\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [onResize]);\n\n  return (\n    <div css={isWide && width && sizedWrapper(width)} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default ThinRectangleBox;\n","export { default as FullHeightBox } from './FullHeightBox';\nexport { default as FullWidthBox } from './FullWidthBox';\nexport { default as Stack } from './Stack';\nexport * from './Stack';\nexport { default as ThinRectangleBox } from './ThinRectangleBox';\n","export const ROOT_PATH = process.env.NEXT_PUBLIC_DOMAIN || 'localhost:3000';\nexport const BASE_PATH = process.env.NEXT_PUBLIC_BASE_PATH || '/';\nexport const IMAGES_PATH = `${BASE_PATH}images/`;\n","export const MEDIHEAL = 'mediheal';\nexport const BRAND_NAMES = [MEDIHEAL] as const;\nexport type BrandName = (typeof BRAND_NAMES)[number];\n\nexport const getBrandName = (name: string = MEDIHEAL): BrandName => {\n  return BRAND_NAMES.includes(name as BrandName)\n    ? (name as BrandName)\n    : MEDIHEAL;\n};\n","import { useRouter } from 'next/router';\n\nimport { IMAGES_PATH } from 'src/constants/resouce';\n\nimport type { BrandName } from './commons';\nimport { getBrandName } from './commons';\n\ninterface Return {\n  name: BrandName;\n  readableName: string;\n  logoUrl: string;\n}\n\nconst useProductInfo = (): Return => {\n  // TODO: import { camelizeKeys } from 'humps'; 적용 필요 parma 은 snake 다.\n  const router = useRouter();\n  const name = getBrandName(router.query?.brand_name as string);\n  const readableName = '메디힐';\n  const logoUrl = `${IMAGES_PATH}${name}/logo.svg`;\n  return {\n    name,\n    readableName,\n    logoUrl,\n  };\n};\n\nexport default useProductInfo;\n","import { IMAGES_PATH } from '../constants/resouce';\nimport type { BrandName } from './commons';\n\ninterface UseSurveysForBestFitProps {\n  brandName: BrandName;\n}\n\nexport interface Survey {\n  question: string;\n  options: [string, string];\n}\n\ninterface Return {\n  backgroundImage: string;\n  surveyBackgroundImage: string;\n  surveys: Array<Survey>;\n}\n\nconst useSurveysForBestFit = ({\n  brandName,\n}: UseSurveysForBestFitProps): Return => {\n  // TODO: product name 에 맞게 data 반환\n  return {\n    backgroundImage: `${IMAGES_PATH}${brandName}/10.jpg`,\n    surveyBackgroundImage: `${IMAGES_PATH}${brandName}/11.jpg`,\n    surveys: [\n      {\n        question: '시원하게 세수를 한 후\\n당신의 선택은?',\n        options: [\n          '오래가는 촉촉함!\\n팩 붙이기',\n          '빠르게 수분 충전!\\n스킨 로션 바르기',\n        ],\n      },\n      {\n        question: '시원하게 세수를 한 후\\n당신의 선택은?',\n        options: [\n          '오래가는 촉촉함!\\n팩 붙이기',\n          '빠르게 수분 충전!\\n스킨 로션 바르기\\n빠르게 수분 충전!\\n스킨 로션 바르기\\n빠르게 수분 충전!\\n스킨 로션 바르기',\n        ],\n      },\n      {\n        question: '시원하게 세수를 한 후\\n당신의 선택은?',\n        options: [\n          '오래가는 촉촉함!\\n팩 붙이기',\n          '빠르게 수분 충전!\\n스킨 로션 바르기',\n        ],\n      },\n    ],\n  };\n};\n\nexport default useSurveysForBestFit;\n","import { css } from '@emotion/react';\n\nimport { AnimatedTransition } from 'src/components/animated';\nimport { Typography } from 'src/components/dataDisplay';\nimport { Stack } from 'src/components/layout';\nimport useProductInfo from 'src/hooks/useProductInfo';\nimport useSurveysForBestFit from 'src/hooks/useSurveysForBestFit';\n\nconst contentLayout = css`\n  text-align: center;\n`;\n\nconst optionLayout = css`\n  height: 160px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n\n  color: #ffffff;\n  background: transparent;\n\n  width: 100%;\n\n  overflow: hidden;\n  word-break: keep-all;\n  overflow-wrap: break-word;\n`;\n\ninterface BestFitProductQuestionProps {\n  index: number;\n  onLeftClick: () => void;\n  onRightClick: () => void;\n}\n\nconst BestFitProductQuestion = ({\n  index,\n  onLeftClick,\n  onRightClick,\n}: BestFitProductQuestionProps): JSX.Element | null => {\n  const { name: brandName } = useProductInfo();\n  const { surveys } = useSurveysForBestFit({\n    brandName,\n  });\n\n  const { question = '', options = '' } = surveys?.at(index) ?? {};\n  const questions = question.split('\\n');\n\n  const [leftOption, rightOption] = options;\n  const leftOptions = leftOption.split('\\n');\n  const rightOptions = rightOption.split('\\n');\n\n  if (!surveys || index < 0 || index > surveys.length) {\n    return null;\n  }\n\n  console.log('BestFitProductQuestion', 'index', index);\n  return (\n    <AnimatedTransition>\n      <Stack spacing={40} justifyContent=\"center\" css={contentLayout}>\n        <Typography variant=\"h3\">\n          {questions.map((text, index) => {\n            const key = `${index}-${text}`;\n            return <div key={key}>{text}</div>;\n          })}\n        </Typography>\n        <Stack direction=\"row\" spacing={20} justifyContent=\"space-between\">\n          <button type=\"button\" css={optionLayout} onClick={onLeftClick}>\n            {leftOptions.map((text, lineIndex) => {\n              const lineKey = `${lineIndex}-${text}`;\n              return (\n                <span key={lineKey}>\n                  {text}\n                  <br />\n                </span>\n              );\n            })}\n          </button>\n          <button type=\"button\" css={optionLayout} onClick={onRightClick}>\n            {rightOptions.map((text, lineIndex) => {\n              const lineKey = `${lineIndex}-${text}`;\n              return (\n                <span key={lineKey}>\n                  {text}\n                  <br />\n                </span>\n              );\n            })}\n          </button>\n        </Stack>\n      </Stack>\n    </AnimatedTransition>\n  );\n};\n\nexport default BestFitProductQuestion;\n"],"names":["window","__NEXT_P","push","__webpack_require__","LEFT_TO_RIGHT","from","opacity","x","to","EASE_IN_OUT_BACK_CONFIG","easing","easings","EASE_OUT_ELASTIC_CONFIG","DEFAULT_OPTIONS","y","config","LEFT_TO_RIGHT_OPTIONS","REPEAT_OPTIONS","loop","Animated","children","options","others","param","props","useSpring","emotion_react_jsx_runtime_browser_esm","tZ","animated","style","animated_Animated","AnimatedInView","ref","springs","useInView","once","animated_AnimatedInView","AnimatedTransition","transitions","useTransition","transform","enter","leave","reset","animated_AnimatedTransition","h1","css","h2","h3","h4","title","subtitle","body","caption","badge","Typography","variant","span","dataDisplay_Typography","wrapper","FullHeightBox","div","layout_FullHeightBox","FullWidthBox","layout_FullWidthBox","NORMAL","direction","COLUMN","spacing","alignItems","justifyContent","fullWidthStyle","Stack","fullWidth","layout_Stack","sizedWrapper","width","ThinRectangleBox","isWide","setIsWide","useState","setWidth","onResize","isWidthBigger","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","layout_ThinRectangleBox","ROOT_PATH","process","BASE_PATH","IMAGES_PATH","concat","MEDIHEAL","BRAND_NAMES","getBrandName","name","includes","useProductInfo","router","useRouter","query","brand_name","logoUrl","readableName","hooks_useProductInfo","useSurveysForBestFit","brandName","backgroundImage","surveyBackgroundImage","surveys","question","__webpack_exports__","contentLayout","optionLayout","BestFitProductQuestion","index","onLeftClick","onRightClick","at","questions","split","leftOption","rightOption","leftOptions","rightOptions","length","console","log","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__","BX","map","text","key","button","type","onClick","lineIndex","lineKey","br"],"sourceRoot":""}
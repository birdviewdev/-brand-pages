{"version":3,"file":"static/chunks/pages/best-fit-product/survey/BestFitProductSurvey-e55a335148413b09.js","mappings":"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","sources":["webpack://_N_E/?167a","webpack://_N_E/./src/components/surface/Paper.tsx","webpack://_N_E/./src/constants/resouce.ts","webpack://_N_E/./src/pages/best-fit-product/survey/BestFitProductSurvey.tsx","webpack://_N_E/./src/pages/best-fit-product/survey/ProgressBar.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/best-fit-product/survey/BestFitProductSurvey\",\n      function () {\n        return require(\"private-next-pages/best-fit-product/survey/BestFitProductSurvey.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/best-fit-product/survey/BestFitProductSurvey\"])\n      });\n    }\n  ","import { css } from '@emotion/react';\n\nexport interface PaperProps {\n  children: React.ReactNode;\n  backgroundUrl?: string;\n}\n\nconst background = (url: PaperProps['backgroundUrl']) => css`\n  ${url\n    ? ` background-image:  url(${url});\n    background-repeat: no-repeat;\n    background-size: auto 100% ; \n    background-position: center;`\n    : `background: #ffffff;`}\n`;\n\nconst Paper = ({\n  children,\n  backgroundUrl,\n  ...others\n}: PaperProps): JSX.Element => {\n  return (\n    <div css={background(backgroundUrl)} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default Paper;\n","export const ROOT_PATH = process.env.NEXT_PUBLIC_DOMAIN || 'localhost:3000';\nexport const BASE_PATH = process.env.NEXT_PUBLIC_BASE_PATH || '/';\nexport const IMAGES_PATH = `${BASE_PATH}images/`;\n","import { css } from '@emotion/react';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\n\nimport { Typography } from 'src/components/dataDisplay';\nimport { FullHeightBox, Stack, ThinRectangleBox } from 'src/components/layout';\nimport { Paper } from 'src/components/surface';\nimport { BASE_PATH, ROOT_PATH } from 'src/constants/resouce';\nimport useSurveysForBestFit from 'src/hooks/useSurveysForBestFit';\n\nimport BestFitProductQuestion from './BestFitProductQuestion';\nimport ProgressBar from './ProgressBar';\n\nconst contentLayout = css`\n  padding: 20px;\n  color: #ffffff;\n`;\n\nconst stepLayout = css``;\n\nconst scrollSnapTypeMandatory = css`\n  overflow: hidden;\n  scroll-snap-type: x mandatory;\n`;\n\nconst questionLayout = css`\n  width: 100%;\n`;\n\nconst nowrap = css`\n  white-space: nowrap;\n`;\n\nconst removeFirstSlash = (path: string) => {\n  if (!path || !path.length) {\n    return path;\n  }\n  const first = path.substring(0, 1);\n  if (first !== '/') {\n    return path;\n  }\n  return path.substring(1);\n};\n\nconst BestFitProductSurvey = (): JSX.Element => {\n  const router = useRouter();\n  const { pathname = '', basePath = '' } = router;\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState(new Map<number, number>());\n  const { backgroundImageUrl, questions } = useSurveysForBestFit({\n    id: 1,\n  });\n  const progressPercent =\n    questions.length === 0 ? 0 : ((step + 1) / questions.length) * 100;\n\n  console.log('BestFitProductSurvey', 'step', step);\n  console.log('BestFitProductSurvey', 'answers', answers);\n  console.log('BestFitProductSurvey', 'surveys', questions.length);\n  console.log('BestFitProductSurvey', 'progressPercent', progressPercent);\n\n  console.log('basePath', basePath);\n  console.log('pathname', pathname);\n  console.log('parentPath', pathname.split('/').slice(0, -1).join('/'));\n  const handleLeftClick = () => {\n    console.log('handleLeftClick', 'from', step);\n    if (step >= questions.length) {\n      // error\n      return;\n    }\n\n    const { choices } = questions.at(step) ?? questions[0];\n    const [leftChoice] = choices;\n    const { type } = leftChoice;\n    console.log('handleLeftClick', 'type', type);\n    const nextAnswers = type.reduce((map, index) => {\n      if (map.has(index)) {\n        const value = map.get(index) ?? 1;\n        map.set(index, value + 1);\n      } else {\n        map.set(index, 1);\n      }\n      return map;\n    }, new Map<number, number>(answers));\n\n    if (step < questions.length - 1) {\n      setAnswers(() => nextAnswers);\n      setStep((prev) => prev + 1);\n    } else {\n      const result = [...nextAnswers.entries()].reduce((a, e) =>\n        e[1] > a[1] ? e : a,\n      );\n      console.log('go result!', result);\n      const parentPath = pathname.split('/').slice(0, -1).join('/');\n      window.location.href = `${ROOT_PATH}${BASE_PATH}${basePath}${removeFirstSlash(\n        parentPath,\n      )}/result?id=1&type=${result}`;\n    }\n  };\n  const handleRightClick = () => {\n    console.log('handleRightClick', 'from', step);\n    if (step >= questions.length) {\n      // error\n      return;\n    }\n\n    const { choices } = questions.at(step) ?? questions[0];\n    const [, rightChoice] = choices;\n    const { type } = rightChoice;\n    console.log('handleRightClick', 'type', type);\n    const nextAnswers = type.reduce((map, index) => {\n      if (map.has(index)) {\n        const value = map.get(index) ?? 1;\n        map.set(index, value + 1);\n      } else {\n        map.set(index, 1);\n      }\n      return map;\n    }, new Map<number, number>(answers));\n\n    if (step < questions.length - 1) {\n      setAnswers(() => nextAnswers);\n      setStep((prev) => prev + 1);\n    } else {\n      const result = [...nextAnswers.entries()].reduce((a, e) =>\n        e[1] > a[1] ? e : a,\n      )[0];\n      console.log('go result!', result);\n      const parentPath = pathname.split('/').slice(0, -1).join('/');\n      window.location.href = `${ROOT_PATH}${BASE_PATH}${basePath}${removeFirstSlash(\n        parentPath,\n      )}/result?id=1&type=${result}`;\n    }\n  };\n\n  return (\n    <ThinRectangleBox>\n      <Paper backgroundUrl={backgroundImageUrl}>\n        <FullHeightBox>\n          <Stack\n            justifyContent=\"flex-start\"\n            spacing={194}\n            fullWidth\n            css={contentLayout}\n          >\n            <Stack\n              direction=\"row\"\n              spacing={8}\n              justifyContent=\"space-between\"\n              css={stepLayout}\n            >\n              <ProgressBar percent={progressPercent} />\n              <Typography variant=\"badge\" css={nowrap}>\n                {step + 1} / {questions.length}\n              </Typography>\n            </Stack>\n            <div css={scrollSnapTypeMandatory}>\n              <div css={questionLayout}>\n                <BestFitProductQuestion\n                  index={step}\n                  onLeftClick={handleLeftClick}\n                  onRightClick={handleRightClick}\n                />\n              </div>\n            </div>\n          </Stack>\n        </FullHeightBox>\n      </Paper>\n    </ThinRectangleBox>\n  );\n};\n\nexport default BestFitProductSurvey;\n","import { css } from '@emotion/react';\n\nconst progressBarLayout = css`\n  width: calc(100% - 2px);\n  height: 8px;\n  border: 1px solid #ffffff;\n  border-radius: 100px;\n`;\n\nconst progressBarStyle = (percent: number) => css`\n  width: ${percent}%;\n  height: 8px;\n  background: #ffffff;\n`;\n\ninterface ProgressBarProps {\n  percent: number;\n}\nconst ProgressBar = ({ percent }: ProgressBarProps): JSX.Element => {\n  return (\n    <div css={progressBarLayout}>\n      <div css={progressBarStyle(percent)} />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"names":["window","__NEXT_P","push","__webpack_require__","background","css","url","concat","Paper","children","backgroundUrl","others","param","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","tZ","div","__webpack_exports__","ROOT_PATH","process","BASE_PATH","IMAGES_PATH","contentLayout","stepLayout","scrollSnapTypeMandatory","questionLayout","nowrap","removeFirstSlash","path","length","first","substring","BestFitProductSurvey","router","useRouter","pathname","basePath","step","setStep","useState","answers","setAnswers","Map","backgroundImageUrl","questions","useSurveysForBestFit","id","progressPercent","console","log","split","slice","join","handleLeftClick","choices","at","leftChoice","type","nextAnswers","reduce","map","index","has","value","get","set","prev","result","entries","a","e","parentPath","location","href","handleRightClick","rightChoice","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__","ThinRectangleBox","FullHeightBox","BX","Stack","justifyContent","spacing","fullWidth","direction","ProgressBar","percent","Typography","variant","BestFitProductQuestion","onLeftClick","onRightClick","progressBarLayout","progressBarStyle"],"sourceRoot":""}
{"version":3,"file":"static/chunks/862-63a8d8f70a13a4f6.js","mappings":"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","sources":["webpack://_N_E/./src/components/animated/constant.ts","webpack://_N_E/./src/components/animated/Animated.tsx","webpack://_N_E/./src/components/animated/AnimatedInView.tsx","webpack://_N_E/./src/components/animated/AnimatedTransition.tsx","webpack://_N_E/./src/components/animated/index.ts","webpack://_N_E/./src/components/dataDisplay/Typography.tsx","webpack://_N_E/./src/components/dataDisplay/index.ts","webpack://_N_E/./src/components/inputs/Button.tsx","webpack://_N_E/./src/components/inputs/index.ts","webpack://_N_E/./src/components/layout/FullHeightBox.tsx","webpack://_N_E/./src/components/layout/FullWidthBox.tsx","webpack://_N_E/./src/components/layout/Stack.tsx","webpack://_N_E/./src/components/layout/ThinRectangleBox.tsx","webpack://_N_E/./src/components/layout/index.ts","webpack://_N_E/./src/hooks/useSurveysForBestFit.ts","webpack://_N_E/./src/pages/best-fit-product/survey/BestFitProductQuestion.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import type { UseSpringProps } from '@react-spring/web';\nimport { easings } from '@react-spring/web';\n\nexport const BOTTOM_TO_UP = {\n  from: {\n    opacity: 0,\n    y: 100,\n  },\n  to: {\n    opacity: 1,\n    y: 0,\n  },\n};\n\nexport const LEFT_TO_RIGHT = {\n  from: {\n    opacity: 0,\n    x: -100,\n  },\n  to: {\n    opacity: 1,\n    x: 0,\n  },\n};\n\nexport const EASE_IN_OUT_BACK_CONFIG = {\n  easing: easings.easeInOutBack,\n};\nexport const EASE_OUT_ELASTIC_CONFIG = {\n  easing: easings.easeOutElastic,\n};\n\nexport const DEFAULT_OPTIONS: UseSpringProps = {\n  ...BOTTOM_TO_UP,\n  config: EASE_IN_OUT_BACK_CONFIG,\n};\n\nexport const LEFT_TO_RIGHT_OPTIONS: UseSpringProps = {\n  ...LEFT_TO_RIGHT,\n  config: EASE_IN_OUT_BACK_CONFIG,\n};\n\nexport const LEFT_TO_RIGHT_ELASTIC_OPTIONS: UseSpringProps = {\n  ...LEFT_TO_RIGHT,\n  config: EASE_OUT_ELASTIC_CONFIG,\n};\n\nexport const REPEAT_OPTIONS: UseSpringProps = {\n  loop: true,\n  from: { x: -20, opacity: 0.5 },\n  to: [\n    { x: 0, opacity: 1 },\n    { x: 20, opacity: 0.5 },\n    { x: 0, opacity: 1 },\n    { x: -20, opacity: 0.5 },\n  ],\n  config: EASE_IN_OUT_BACK_CONFIG,\n};\n","import type { UseSpringProps } from '@react-spring/web';\nimport { animated, useSpring } from '@react-spring/web';\n\nimport { DEFAULT_OPTIONS } from './constant';\n\ninterface AnimatedInViewProps {\n  children: React.ReactNode;\n  options?: UseSpringProps;\n}\nconst Animated = ({\n  children,\n  options = DEFAULT_OPTIONS,\n  ...others\n}: AnimatedInViewProps): JSX.Element => {\n  const props = useSpring(options);\n\n  return (\n    <animated.div style={props} {...others}>\n      {children}\n    </animated.div>\n  );\n};\n\nexport default Animated;\n","import type { UseSpringProps } from '@react-spring/web';\nimport { animated, useInView } from '@react-spring/web';\n\nimport { DEFAULT_OPTIONS } from './constant';\n\ninterface AnimatedInViewProps {\n  children: React.ReactNode;\n  options?: UseSpringProps;\n}\nconst AnimatedInView = ({\n  children,\n  options = DEFAULT_OPTIONS,\n  ...others\n}: AnimatedInViewProps): JSX.Element => {\n  const [ref, springs] = useInView(() => options, {\n    once: false,\n  });\n\n  return (\n    <animated.div ref={ref} style={springs} {...others}>\n      {children}\n    </animated.div>\n  );\n};\n\nexport default AnimatedInView;\n","import { animated, useTransition } from '@react-spring/web';\n\ninterface AnimatedInViewProps {\n  children: React.ReactNode;\n}\nconst AnimatedTransition = ({\n  children,\n  ...others\n}: AnimatedInViewProps): JSX.Element => {\n  const transitions = useTransition(children, {\n    from: { opacity: 0, transform: 'translateX(-100%)' },\n    enter: {\n      opacity: 1,\n      transform: 'translateX(0)',\n    },\n    leave: { transform: 'translateX(100%)' },\n    reset: true,\n  });\n\n  return transitions((style) => (\n    <animated.div style={style} {...others}>\n      {children}\n    </animated.div>\n  ));\n};\n\nexport default AnimatedTransition;\n","export { default as Animated } from './Animated';\nexport { default as AnimatedInView } from './AnimatedInView';\nexport { default as AnimatedTransition } from './AnimatedTransition';\nexport * from './constant';\n","import { css } from '@emotion/react';\n\n// TODO: theme 으로 이동\nconst style = {\n  h1: css`\n    font-style: normal;\n    font-weight: 900;\n    font-size: 40px;\n    letter-spacing: -0.2px;\n    line-height: 40px;\n  `,\n  h2: css`\n    font-style: normal;\n    font-weight: 900;\n    font-size: 32px;\n    letter-spacing: -0.2px;\n    line-height: 36px;\n  `,\n  h3: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 24px;\n    letter-spacing: -0.2px;\n    line-height: 30px;\n  `,\n  h4: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 16px;\n    letter-spacing: -0.2px;\n    line-height: 24px;\n  `,\n  titleLarge: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 20px;\n    letter-spacing: -0.2px;\n    line-height: 28px;\n  `,\n  title: css`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    letter-spacing: -0.2px;\n    line-height: 24px;\n  `,\n  subtitle: css`\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    letter-spacing: -0.2px;\n    line-height: 24px;\n  `,\n  body: css`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    letter-spacing: -0.2px;\n    line-height: 20px;\n  `,\n  caption: css`\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    letter-spacing: -0.2px;\n    line-height: 16px;\n  `,\n  badge: css`\n    font-style: normal;\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: -0.2px;\n  `,\n};\n\nconst variants = [\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'titleLarge',\n  'title',\n  'subtitle',\n  'body',\n  'caption',\n  'badge',\n] as const;\nexport type Variant = (typeof variants)[number];\n\ninterface TypographyProps {\n  children: React.ReactNode;\n  variant?: Variant;\n}\n\nconst Typography = ({\n  children,\n  variant = 'body',\n  ...others\n}: TypographyProps): JSX.Element => {\n  return (\n    <span css={style[variant]} {...others}>\n      {children}\n    </span>\n  );\n};\n\nexport default Typography;\n","export { default as Typography } from './Typography';\nexport * from './Typography';\n","import { css } from '@emotion/react';\n\nconst style = {\n  default: css`\n    border-radius: 8px;\n  `,\n  height: (value: number) => css`\n    height: ${value}px;\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nconst WHITE = '#ffffff';\nconst DEFAULT_BACKGROUND = WHITE;\nconst CONTAINED = 'contained';\nconst OUTLINED = 'outlined';\nconst VARIANTS = [CONTAINED, OUTLINED];\ntype Variant = (typeof VARIANTS)[number];\n\nconst getVariantStyle = (\n  variant: Variant,\n  color: string,\n  background: string = DEFAULT_BACKGROUND,\n) => {\n  switch (variant) {\n    case OUTLINED:\n      return css`\n        color: ${color};\n        background: ${background};\n        border: solid 1px ${color};\n      `;\n    case CONTAINED:\n    default:\n      return css`\n        color: ${background};\n        background: ${color};\n        border: none;\n      `;\n  }\n};\n\ninterface ButtonProps {\n  variant?: Variant;\n  color: string;\n  background?: string;\n  height?: number;\n  fullWidth?: boolean;\n  onClick?: () => void;\n  children?: React.ReactNode;\n}\nconst Button = ({\n  variant = 'contained',\n  color,\n  background = DEFAULT_BACKGROUND,\n  height,\n  fullWidth,\n  onClick,\n  children,\n  ...others\n}: ButtonProps): JSX.Element => {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      css={[\n        style.default,\n        getVariantStyle(variant, color, background),\n        fullWidth && style.fullWidth,\n        height && style.height(height),\n      ]}\n      {...others}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","export { default as Button } from './Button';\n","import { css } from '@emotion/react';\n// import { useCallback, useEffect, useState } from 'react';\n\n// TODO: 동적으로 처리하면 웹뷰에서 출력이 안된다. 다른 대안이 필요하다.\n// const wrapper = (height: number) => css`\n//  height: ${height ? `${height}px` : '100vh'};\n// `;\n// position: fixed;\n// height: 100%;\n// width: 100%;\nconst wrapper = css`\n  height: 100vh;\n  display: flex;\n  align-items: stretch;\n`;\n\ninterface FullHeightBoxProps {\n  children: React.ReactNode;\n}\nconst FullHeightBox = ({\n  children,\n  ...others\n}: FullHeightBoxProps): JSX.Element => {\n  return (\n    <div css={wrapper} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default FullHeightBox;\n","import { css } from '@emotion/react';\n\n// 사용성이 떨어진다. Stack 의 경우 직접 fullWidth 가 포함되었다.\nconst wrapper = css`\n  flex: 0 0 100%;\n`;\n\ninterface FullWidthBoxProps {\n  children: React.ReactNode;\n}\nconst FullWidthBox = ({\n  children,\n  ...others\n}: FullWidthBoxProps): JSX.Element => {\n  return (\n    <div css={wrapper} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default FullWidthBox;\n","import { css } from '@emotion/react';\n\nconst ROW = 'row';\nconst ROW_REVERSE = 'row-reverse';\nconst COLUMN = 'column';\nconst COLUMN_REVERSE = 'column-reverse';\n\nconst DIRECTIONS = [ROW, ROW_REVERSE, COLUMN, COLUMN_REVERSE] as const;\nexport type Direction = (typeof DIRECTIONS)[number];\n\nconst BASELINE = 'baseline';\nconst NORMAL = 'normal';\nconst STRETCH = 'stretch';\nconst CENTER = 'center';\nconst START = 'flex-start';\nconst END = 'flex-end';\n\nconst ALIGN_ITEMS = [NORMAL, BASELINE, STRETCH, CENTER, START, END] as const;\nexport type AlignItems = (typeof ALIGN_ITEMS)[number];\n\nconst SPACE_BETWEEN = 'space-between';\nconst JUSTIFY_CONTENT = [NORMAL, SPACE_BETWEEN, START, END, CENTER] as const;\nexport type JustifyContent = (typeof JUSTIFY_CONTENT)[number];\n\nexport interface StackProps {\n  direction?: Direction;\n  spacing?: number;\n  alignItems?: AlignItems;\n  justifyContent?: JustifyContent;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n}\n\nconst wrapper = (\n  direction: StackProps['direction'] = COLUMN,\n  spacing = 0,\n  alignItems = NORMAL,\n  justifyContent = NORMAL,\n) => css`\n  display: flex;\n  flex-direction: ${direction};\n  gap: ${spacing}px;\n  align-items: ${alignItems};\n  justify-content: ${justifyContent};\n`;\n\nconst fullWidthStyle = css`\n  width: 100%;\n`;\n\n// flex-direction: column 을 기본으로 하며\n// flex-start, flext-end 등 사용하는 property 만 제공하는 정렬을 위한 Flex Box\nconst Stack = ({\n  children,\n  direction,\n  spacing,\n  alignItems,\n  justifyContent,\n  fullWidth,\n  ...others\n}: StackProps): JSX.Element => {\n  return (\n    <div\n      css={[\n        wrapper(direction, spacing, alignItems, justifyContent),\n        fullWidth && fullWidthStyle,\n      ]}\n      {...others}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Stack;\n","import { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\n\nconst sizedWrapper = (width: number) => css`\n  width: ${width}px;\n`;\n\ninterface VerticalScrollableBoxProps {\n  children: React.ReactNode;\n}\n\n// 최소한의 반응형 처리 - width 가 height 보다 클때 height 를 width 로 사용하도록 처리합니다.\n// 가장 상단에 사용하는 것을 추천합니다.. 예, pages/.+/index.tsx\nconst ThinRectangleBox = ({\n  children,\n  ...others\n}: VerticalScrollableBoxProps): JSX.Element => {\n  const [isWide, setIsWide] = useState(false);\n  const [width, setWidth] = useState<number | null>(null);\n\n  const onResize = () => {\n    const isWidthBigger =\n      window.innerWidth > 0 && window.innerWidth > window.innerHeight;\n    setIsWide(isWidthBigger);\n    setWidth(isWidthBigger ? window.innerHeight : null);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    onResize();\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [onResize]);\n\n  return (\n    <div css={isWide && width && sizedWrapper(width)} {...others}>\n      {children}\n    </div>\n  );\n};\n\nexport default ThinRectangleBox;\n","export { default as FullHeightBox } from './FullHeightBox';\nexport { default as FullWidthBox } from './FullWidthBox';\nexport { default as Stack } from './Stack';\nexport * from './Stack';\nexport { default as ThinRectangleBox } from './ThinRectangleBox';\n","interface UseSurveysForBestFitProps {\n  id: number;\n}\nexport interface Choice {\n  description: string;\n  type: Array<number>;\n}\n\nexport interface Question {\n  title: string;\n  choices: [Choice, Choice];\n}\n\nexport interface Result {\n  resultImageUrl: string;\n  resultContentUrl: string;\n  productId: number;\n}\n\nexport interface Return {\n  id: number;\n  title: string;\n  mainImageUrl: string;\n  backgroundImageUrl: string;\n  customColorSet: {\n    background: string;\n    textColor: string;\n    mainColor: string;\n  };\n  stampObtainAvailability: {\n    attend: boolean;\n    pageShare: boolean;\n    correctAnswer: boolean | null;\n  };\n  questions: Array<Question>;\n  results: Array<Result>;\n}\n\nconst useSurveysForBestFit = ({ id }: UseSurveysForBestFitProps): Return => {\n  // TODO: product name 에 맞게 data 반환\n  console.log('useSurveysForBestFit', id);\n  return {\n    id: 1,\n    title: '현재 안씀',\n    mainImageUrl:\n      'https://dev-ad-center-cdn.hwahae.co.kr/test/beauty-test/main_image_url.png',\n    backgroundImageUrl:\n      'https://dev-ad-center-cdn.hwahae.co.kr/test/beauty-test/background_image_url.png',\n    customColorSet: {\n      mainColor: '#28B978',\n      background: '#FFF0FA',\n      textColor: '#F53264',\n    },\n    stampObtainAvailability: {\n      attend: false,\n      pageShare: true,\n      correctAnswer: null,\n    },\n    questions: [\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n      {\n        title: '시원하게 세수를 한 후\\n당신의 선택은?',\n        choices: [\n          {\n            description: '오래가는 촉촉함!\\n팩 붙이기',\n            type: [0, 2],\n          },\n          {\n            description: '빠르게 수분 충전!\\n스킨 로션 바르기',\n            type: [1],\n          },\n        ],\n      },\n    ],\n    results: [\n      {\n        resultImageUrl:\n          'https://dev-ad-center-cdn.hwahae.co.kr/test/beauty-test/result_image_url1.png',\n        resultContentUrl:\n          'https://dev-ad-center-cdn.hwahae.co.kr/test/beauty-test/result_content_url1.png',\n        productId: 1,\n      },\n      {\n        resultImageUrl:\n          'https://dev-ad-center-cdn.hwahae.co.kr/test/beauty-test/result_image_url2.png',\n        resultContentUrl:\n          'https://dev-ad-center-cdn.hwahae.co.kr/test/beauty-test/result_content_url2.png',\n        productId: 2,\n      },\n    ],\n  };\n};\n\nexport default useSurveysForBestFit;\n","import { css } from '@emotion/react';\nimport { memo } from 'react';\n\nimport { AnimatedTransition } from 'src/components/animated';\nimport { Typography } from 'src/components/dataDisplay';\nimport { Button } from 'src/components/inputs';\nimport { Stack } from 'src/components/layout';\nimport useSurveysForBestFit from 'src/hooks/useSurveysForBestFit';\n\nconst contentLayout = css`\n  text-align: center;\n`;\n\nconst optionLayout = css`\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  overflow: hidden;\n  word-break: keep-all;\n  overflow-wrap: break-word;\n`;\n\ninterface BestFitProductQuestionProps {\n  index: number;\n  onLeftClick: () => void;\n  onRightClick: () => void;\n}\n\nconst BestFitProductQuestion = ({\n  index,\n  onLeftClick,\n  onRightClick,\n}: BestFitProductQuestionProps): JSX.Element | null => {\n  const { questions } = useSurveysForBestFit({\n    id: 1,\n  });\n\n  const { title = '', choices } = questions?.at(index) ?? questions[0];\n  const titles = title.split('\\n');\n\n  const [leftChoice, rightChoice] = choices;\n  const leftChoiceDescriptions = leftChoice.description.split('\\n');\n  const rightChoiceDescriptions = rightChoice.description.split('\\n');\n\n  if (!questions || index < 0 || index > questions.length) {\n    return null;\n  }\n\n  console.log('BestFitProductQuestion', 'index', index);\n  return (\n    <AnimatedTransition>\n      <Stack spacing={40} justifyContent=\"center\" css={contentLayout}>\n        <Typography variant=\"h3\">\n          {titles.map((text) => {\n            return <div key={text}>{text}</div>;\n          })}\n        </Typography>\n        <Stack direction=\"row\" spacing={20} justifyContent=\"space-between\">\n          <Button\n            variant=\"outlined\"\n            color=\"#ffffff\"\n            background=\"transparent\"\n            height={160}\n            fullWidth\n            css={optionLayout}\n            onClick={onLeftClick}\n          >\n            {leftChoiceDescriptions.map((text) => {\n              return (\n                <span key={text}>\n                  {text}\n                  <br />\n                </span>\n              );\n            })}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"#ffffff\"\n            background=\"transparent\"\n            height={160}\n            fullWidth\n            css={optionLayout}\n            onClick={onRightClick}\n          >\n            {rightChoiceDescriptions.map((text) => {\n              return (\n                <span key={text}>\n                  {text}\n                  <br />\n                </span>\n              );\n            })}\n          </Button>\n        </Stack>\n      </Stack>\n    </AnimatedTransition>\n  );\n};\n\n// 마지막 문제에서 다시 랜더링 되는 문제 제거\n// userCallback 등으로 다른 param 을 동일하게 만들어줘야 하나도 고민\nexport default memo(BestFitProductQuestion, (prev, next) => {\n  return prev.index === next.index;\n});\n"],"names":["LEFT_TO_RIGHT","from","opacity","x","to","EASE_IN_OUT_BACK_CONFIG","easing","easings","EASE_OUT_ELASTIC_CONFIG","DEFAULT_OPTIONS","y","config","LEFT_TO_RIGHT_OPTIONS","REPEAT_OPTIONS","loop","Animated","children","options","others","param","props","useSpring","emotion_react_jsx_runtime_browser_esm","tZ","animated","style","animated_Animated","AnimatedInView","ref","springs","useInView","once","animated_AnimatedInView","AnimatedTransition","transitions","useTransition","transform","enter","leave","reset","animated_AnimatedTransition","h1","css","h2","h3","h4","titleLarge","title","subtitle","body","caption","badge","Typography","variant","span","dataDisplay_Typography","default","height","value","fullWidth","DEFAULT_BACKGROUND","getVariantStyle","color","background","Button","onClick","button","type","inputs_Button","wrapper","FullHeightBox","div","layout_FullHeightBox","FullWidthBox","layout_FullWidthBox","NORMAL","direction","COLUMN","spacing","alignItems","justifyContent","fullWidthStyle","Stack","layout_Stack","sizedWrapper","width","ThinRectangleBox","isWide","setIsWide","useState","setWidth","onResize","isWidthBigger","window","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","layout_ThinRectangleBox","useSurveysForBestFit","id","console","log","mainImageUrl","backgroundImageUrl","customColorSet","mainColor","textColor","stampObtainAvailability","attend","pageShare","correctAnswer","questions","choices","description","results","resultImageUrl","resultContentUrl","productId","__webpack_exports__","contentLayout","optionLayout","BestFitProductQuestion","index","onLeftClick","onRightClick","at","titles","split","leftChoice","rightChoice","leftChoiceDescriptions","rightChoiceDescriptions","length","_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__","BX","map","text","br","memo","prev","next"],"sourceRoot":""}